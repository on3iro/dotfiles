{"commands":[{"id":"WEBMY0oGiNzhTWl7YaSrQ","command":"curl -H 'Accept: application/json' -H \"x-apikey: ${SW_API_KEY}\" -H \"Authorization: Bearer ${TOKEN}\" https://api.production.kiwios.io/hems/device -v","description":"Curl command to fetch from the kiwigrid hems api v2 with bearer and x-api-key"},{"id":"c_1","command":"git branch | ack -v \"(main | dev)\" | xargs git branch -D","description":"git delete branch of a certain format / with certain strings inside their name"},{"id":"c_4","command":"tar -xzvf","description":"extract tar ball"},{"id":"c_5","command":"nmap -sn <ip>","description":"* nmap ping sweep without ports to quickly get overview of devices inside network\n* to poll all ips inside a subnet use subnet notation (e.g. /24)\n* to see all possible information use `sudo`\n-"},{"id":"N23Di7cS9bhnGRUKNdRUG","command":"TOKEN=$(curl -X POST \"https://idm.kiwigrid.com/auth/realms/solarwatt/protocol/openid-connect/token\" \\\n  -H \"Accept: application/json\" \\\n  -H \"Content-Type: application/x-www-form-urlencoded\" \\\n  --data-urlencode \"client_id=hems-service\" \\\n  --data-urlencode \"username=SW-Demo01\" \\\n  --data-urlencode \"password=SW-Demo01\" \\\n  --data-urlencode \"scope=openid\" \\\n  --data-urlencode \"grant_type=password\" | jq -r '.access_token')","description":"Request a bearer token from the kiwigrid api via curl and write it to the TOKEN environment variable"},{"id":"c_2","command":"certbot certonly --server https://acme-v02.api.letsencrypt.org/directory -d <directory_name> --email <email> --preferred-challenges dns --manual","description":"perform manual certbot dns challenge for domain"},{"id":"X_Lv9efvGUZ7yY7DLJ7PK","command":"find . -depth -name \"*.md\" -exec sh -c 'mv \"$1\" \"${1%.md}.txt\"' _ {} \\;","description":"Change file extensions recursively (pure bash version)"},{"id":"np0jhcuA19nXcb3uyclAJ","command":"git fetch origin pull/$ID/head:$BRANCHNAME","description":"Fetch pull request branch and map it to new local branch"},{"id":"1CG87UJ9jgbqKrj8i0NS5","command":"docker commit <container_ID> <image_name>","description":"Use and existing docker container and create an image copy which can be run"},{"id":"E5fv5hb_tKhoeC1cMzoeG","command":"docker run -it --entrypoin=sh <image_name>","description":"Run docker image interactively from shell"},{"id":"p9m9YJZjLzO4qe0D6DpQt","command":"docker-compose run <service_name> sh","description":"Run docker-compose service with different cmd/entrypoint"},{"id":"jZe208DH8ZPmUaeoitfgW","command":"curl -X POST localhost:8090/api/auth/login -H \"Content-Type: application/json\"  --data '{\"username\":\"oneiro\",\"password\":\"popel\"}' -c ~/tmp-theo/cookie.txt","description":"Login to radlands via API on local dev server"},{"id":"FNZ34gBdtsSysi_TUSv2C","command":"curl -X GET localhost:8090/api/statistics/ -b ~/tmp-theo/cookie.txt","description":"Curl request with access to local cookie jar file"},{"id":"xiQkoFQRj366DlDDH1o1r","command":"git push --delete origin v1.0.0-beta-62","description":"Delete tag from git remote"},{"id":"5u_SDpc3tSivRbZWWp89z","command":"psql 'postgres://radlands:XXX@127.0.0.1:5888/radlands?sslmode=disable'","description":"Connect to radlands postgres db (tunnel needs to exist)"},{"id":"mtd10CHwykUvG8xMFTp01","command":"TOKEN=$(curl -X POST radlands.on3iro.de/api/auth/login -H 'Content-Type: application/json'  --data '{\"password\":\"popel\", \"username\": \"foo\"}' | jq -r '.token')","description":"Logs in to radlands and saves the returned token to $TOKEN"}]}